version: '3.8'

services:
  prometheus:
    build: ./prometheus
    container_name: prometheus-gbo
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ${PROMETHEUS_DATA_PATH:-./data/prometheus}:/prometheus
    depends_on:
      - grafana
      - cadvisor
  cadvisor:
    image: gcr.io/google-containers/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped

  grafana:
    build: ./grafana
    container_name: grafana-gbo
    ports:
      - "3000:3000" 
    volumes:
      - ${GRAFANA_DATA_PATH:-./data/grafana}:/var/lib/grafana

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
    restart: unless-stopped 

  postgres:
    image: postgres:15
    container_name: postgres-gbo
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonarqube
    volumes:
      - ${POSTGRES_DATA_PATH:-./data/postgres}:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube-gbo
    depends_on:
      - postgres
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://postgres:5432/sonarqube
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
      nproc: 4096
    ports:
      - "9000:9000"
    volumes:
      - ${SONARQUBE_DATA_PATH:-./data/sonarqube/data}:/opt/sonarqube/data
      - ${SONARQUBE_EXTENSIONS_PATH:-./data/sonarqube/extensions}:/opt/sonarqube/extensions
      - ${SONARQUBE_LOGS_PATH:-./data/sonarqube/logs}:/opt/sonarqube/logs
    restart: unless-stopped

volumes: {}